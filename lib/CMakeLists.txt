
set(TARGET_NAME enigma)
set(TARGET_OBJECT_NAME "${TARGET_NAME}Objects")
set(TARGET_STATIC_NAME "${TARGET_NAME}Static")
set(TARGET_SHARED_NAME "${TARGET_NAME}")

if(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX)
    if(ENABLE_COVERAGE)
        message(STATUS "Enabling coverage")
        set(CMAKE_BUILD_TYPE Debug)
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -O0 --coverage")
    endif()
endif()

file(GLOB_RECURSE ENIGMA_SOURCES *.cpp)
file(GLOB_RECURSE ENIGMA_HEADERS *.h)

include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include)

add_library(${TARGET_OBJECT_NAME} OBJECT ${ENIGMA_SOURCES} ${ENIGMA_HEADERS})

set_target_properties(${TARGET_OBJECT_NAME} PROPERTIES POSITION_INDEPENDENT_CODE 1)

add_library(${TARGET_SHARED_NAME} SHARED $<TARGET_OBJECTS:${TARGET_OBJECT_NAME}>)
target_compile_definitions(${TARGET_SHARED_NAME} PRIVATE -DENIGMA_SHARED -DENIGMA_EXPORT)

add_library(${TARGET_STATIC_NAME} STATIC $<TARGET_OBJECTS:${TARGET_OBJECT_NAME}>)

if(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX)
    if(ENABLE_COVERAGE)
        target_link_libraries(${TARGET_STATIC_NAME} gcov)
    endif()
endif()
